---
title: "mentality-problems"
editor_options: 
  chunk_output_type: console
---

## Setup 

```{r}
#| label: setup

suppressPackageStartupMessages({
  library(dplyr)
  library(ggplot2)
  library(patchwork)
})

# plot theme
# set minimal theme and specify font
theme_set(theme_minimal(base_family = "Inter", base_size = 15)) +
# update theme to configure legend and increase plot margin
  theme_update(
    plot.background = element_rect(fill = "white", color = "white"),
    plot.title = ggtext::element_markdown(size = rel(1.7), 
                                          margin = margin(b = 15)),
    plot.subtitle = element_text(colour = "gray40", size = rel(0.9), hjust = 0,
                                 lineheight = 1.3, margin = margin(b = 15)),
    plot.caption = element_text(colour = "gray60", size = rel(.8),
                                hjust = 0, margin = margin(t = 25)),
    axis.title.y =  element_text(colour = "gray20", size = rel(1.2), vjust = 10,
                                 margin = margin(l = 15)),
    plot.title.position = "plot", plot.caption.position = "plot",
    legend.position = "top",
    legend.title = element_blank(),
    legend.text = element_text(size=rel(1)),
    axis.text = element_text(size = rel(1)),
    legend.key.width = unit(2,"cm"),
    plot.margin = margin(25, 75, 25, 45)
    )

```

## Data

```{r}
buli_stats <-
  readr::read_csv(here::here("data", "buli_team_stats.csv")) |> 
  rename(
    team = team_name,
    game_state = stat_name,
    season = season_start_year,
    shots_against = against.shots,
    goals_against = against.goals,
    xG_against = against.xG,
    mins = time
  ) |> 
  mutate(
    game_state = recode(game_state,
                        "Goal diff 0" = "Drawing",
                        "Goal diff +1" = "Winning (+1)",
                        "Goal diff > +1" = "Winning (> +1)",
                        "Goal diff -1" = "Losing (-1)",
                        "Goal diff < -1" = "Losing (< -1)")
  )

readr::read_csv(here::here("data", "buli_team_stats.csv")) |> 
    filter(stat_group_name == "gameState") |>
    rename(
      team = team_name,
      game_state = stat_name,
      season = season_start_year,
      shots_against = against.shots,
      goals_against = against.goals,
      xG_against = against.xG,
      mins = time
    ) |>
    mutate(
      game_state = case_when(
        game_state %in% c("Goal diff +1", "Goal diff > +1") ~ "Winning",
        game_state %in% c("Goal diff -1", "Goal diff < -1") ~ "Losing",
        .default = "Drawing"
      ),
      game_state = factor(game_state,
                          levels = c("Winning", "Drawing", "Losing"))
    ) |>
    group_by(team, season, game_state) |>
    summarise(across(shots:mins, ~ sum(.x))) |>
    mutate(
      across(shots:xG_against, ~ .x / (mins / 90)),
      goal_diff = goals - goals_against,
      xG_diff = xG - xG_against,
      shot_diff = shots - shots_against
    )


glimpse(buli_stats)

bvb_shots <-
  readr::read_csv(here::here("data", "buli_shots.csv")) |> 
  filter(home_team == "Borussia Dortmund" | away_team == "Borussia Dortmund")

buli_leads <-
  readr::read_csv(here::here("data", "buli_leads.csv")) |> 
  mutate(
    dropped_points = (leads*3) - points,
    win_percent = wins/leads,
    dropped_points_percent = dropped_points/(points + dropped_points),
    games = factor(games, levels=c("All Games", "Home Games", "Away Games"))
    ) |> 
  arrange(desc(season), games, desc(leads))

buli_deficits <- 
  readr::read_csv(here::here("data", "buli_deficits.csv")) |> 
  mutate(
    win_percent = wins / deficits,
    comeback_percent = (wins + draws) / deficits,
    games = factor(games, levels=c("All Games", "Home Games", "Away Games"))
    ) |> 
  arrange(desc(season), games, desc(deficits))
```

## Game State 

### BVB's Performances

```{r}
#| label: bvb-game-state-df

bvb <-
  buli_stats |> 
  filter(team == "Borussia Dortmund" & stat_group_name == "gameState") |>
  select(!stat_group_name) |> 
  mutate(
  #   game_state = case_when(
  #     startsWith(game_state, "Winning") ~ "Winning",
  #     startsWith(game_state, "Losing") ~ "Losing",
  #     .default = "Drawing"
  #     ),
    game_state = factor(game_state, levels=c("Winning (> +1)", "Winning (+1)",
                                             "Drawing", "Losing (-1)",
                                             "Losing (< -1)"))
    ) |> 
  group_by(season, game_state) |> 
  summarise(across(shots:mins, ~ sum(.x))) |> 
  mutate(
     across(shots:xG_against, ~ .x/(mins/90)),
     goal_diff = goals - goals_against,
     xG_diff = xG - xG_against,
     shot_diff = shots - shots_against
     )

```

```{r}
#| label: bvb-game-state-plot

bvb |> 
  tidyr::pivot_longer(
    cols = ends_with("diff"),
    names_to = "stat"
  ) |> 
  mutate(
    stat = recode(
      stat,
      "goal_diff" = "Goals",
      "xG_diff" = "xG",
      "shot_diff" = "Shots"
    ),
    stat = factor(stat, levels=c("Shots", "Goals", "xG"))
  ) |> 
  ggplot(aes(season, value, colour=game_state)) +
  geom_smooth(method = lm, formula = y ~ splines::bs(x), se = FALSE,
              linewidth = 1.2, alpha = .5) +
  geom_point(aes(fill=game_state), shape = 21, size = 6, alpha = .7, stroke = 1,
             colour = "grey20") +
  facet_wrap(vars(stat), scales = "free_y") +
  scale_fill_manual(values=c('#ffa600', "#ffdf68", '#dee2e6', "#8FA0B3", '#343a40')) +
  scale_colour_manual(values=c('#ffa600', "#ffdf68", '#dee2e6', "#8FA0B3", '#343a40'))  +
  scale_x_continuous(breaks = c(2014:2022), labels = c(
    "2014/15", "2015/16", "2016/17", "2017/18", "2018/19",
    "2019/20", "2020/21", "2021/22", "2022/23")) +
  labs(
    title = "Borussia Dortmund's Bundesliga Performances by Game State, 2014/15 - 2022/23",
    subtitle = glue::glue(
      "While BVB's xGDiff/90 (xG for â€“ XG against) when drawing and losing has ",
      "remained relatively constant from 2014/15 to 2022/23, their xGDiff when ",
      "winning has declined,\neven dropping below the xGDiff when drawing in ",
      "four of the last five seasons. Although BVB's xGDiff rarely drops below ",
      "0 in any game state, their mean average xGDiff\nacross all game states ",
      "dropped from ~1 before the 2018/19 season to ~0.5 after, and that is ",
      "driven by the decline when BVB are winning (from 1.65 to ~0.45)."),
  caption = "Source: Understat (via worldfootballR) | Graphic: Paul Johnson (@paul_johnson89)",
  x = NULL, y = "Difference /90"
  ) +
  theme(panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.y = element_line(linewidth = 0.6, color = "grey80",
                                          linetype = "dotted"),
        panel.grid.minor.y = element_blank(),
        axis.text.x = element_text(angle = 30, vjust = 0.5, hjust=0.5),
        axis.text.y = element_text(size = rel(1.2)),
        panel.spacing.x = unit(3, "lines"),
        strip.text = element_text(size = rel(1.2), margin = margin(t=10, b=20))
        )




```

### Comparing BVB & Bayern

```{r}
#| label: buli-game-state-df

buli_game_state <- 
  buli_stats |>
  filter(stat_group_name == "gameState") |>
  select(!stat_group_name) |> 
  mutate(
  #   game_state = case_when(
  #     startsWith(game_state, "Winning") ~ "Winning",
  #     startsWith(game_state, "Losing") ~ "Losing",
  #     .default = "Drawing"
  #     ),
    game_state = factor(game_state, levels=c("Winning (> +1)", "Winning (+1)",
                                             "Drawing", "Losing (-1)",
                                             "Losing (< -1)"))
    ) |> 
  group_by(team, season, game_state) |> 
  summarise(across(shots:mins, ~ sum(.x))) |> 
  mutate(
     across(shots:xG_against, ~ .x/(mins/90)),
     goal_diff = goals - goals_against,
     xG_diff = xG - xG_against,
     shot_diff = shots - shots_against
     )

```

```{r}
#| label: comparison-function

comp_plot <- function(stat, label) {
  buli_game_state |>
    mutate(
      team_colours = case_when(
        team == "Bayern Munich" ~ "#DB4254",
        team == "Borussia Dortmund" ~ "#ffa600",
        .default = "#dee2e6"
      ),
      team_alpha = case_when(
        team %in% c("Bayern Munich", "Borussia Dortmund") ~ .8,
        .default = .2
      ),
      team_size = case_when(
        team %in% c("Bayern Munich", "Borussia Dortmund") ~ 6,
        .default = 4
      )
    ) |>
    ggplot(aes(season, {{ stat }})) +
    geom_smooth(aes(colour = team_colours, alpha = team_alpha),
      method = lm, formula = y ~ splines::bs(x),
      se = FALSE, linewidth = 1.2
    ) +
    geom_point(aes(fill = team_colours, alpha = team_alpha, size = team_size),
      shape = 21, stroke = 1
    ) +
    facet_wrap(vars(game_state), ncol = 5, scales = "free_y") +
    scale_colour_identity() +
    scale_fill_identity() +
    scale_alpha_identity() +
    scale_size_identity() +
    scale_x_continuous(
      breaks = c(2014:2022),
      labels = c(
        "2014/15", "2015/16", "2016/17", "2017/18", "2018/19",
        "2019/20", "2020/21", "2021/22", "2022/23"
      )
    ) +
    labs(
      title = glue::glue(
        "<b style='color:#DB4254;'>Bayern Munich</b> & ",
        "<b style='color:#ffa600;'>Borussia Dortmund</b>'s Bundesliga {label} ",
        "Performance by Game State, 2014/15 - 2022/23"
        ),
      caption = glue::glue(
        "Source: Understat (via worldfootballR) | ",
        "Graphic: Paul Johnson (@paul_johnson89)"),
      x = NULL, y=glue::glue("{label} Difference /90")
      ) +
    theme(
      panel.grid.major.x = element_blank(),
      panel.grid.minor.x = element_blank(),
      panel.grid.major.y = element_line(
        linewidth = 0.6, color = "grey80",
        linetype = "dotted"
      ),
      panel.grid.minor.y = element_blank(),
      axis.text.x = element_text(angle = 30, vjust = 0.5, hjust = 0.5),
      panel.spacing.x = unit(3, "lines"),
      strip.text = element_text(size = rel(1))
    )
}

```

```{r}
#| label: xg-comp-plot

comp_plot(stat=xG_diff, label="xG") +
  labs(
    subtitle = glue::glue(
      "Comparing BVB's xG Difference /90 (xG for â€“ XG against) across game states ",
      "with Bayern Munich's helps illustrate Borussia Dortmund's biggest ",
      "issue. Their xG performance is comparable with Bayern's\nwhen drawing, and ",
      "while there's a relatively significant difference between the two when ",
      "losing, it remains (relatively) constant over the course of the seasons analysed. ",
      "When winning, however, Bayern's\nxG Difference /90 has remained around +2, ",
      "while BVB's has dropped significantly. In the last three seasons, ",
      "BVB's performances when winning have been closer to the league average ",
      "than their title rival."
      ),
  )

ggsave(here::here("figs", "buli_xg_game_state.png"),
       dpi = 320, width = 20, height = 10)
  
```

```{r}
#| label: goal-comp-plot

comp_plot(stat=goal_diff, label = "Goal") +
    labs(
    subtitle = glue::glue(
        "Borussia Dortmund's goal difference across game states has stayed ",
        "relatively stable. It has improved a little when drawing, and dipped ",
        "a little when losing, but on the whole BVB have been consistent.\n",
        "What is notable, however, is that when winning and losing this ",
        "season, BVB are averaging less than a +1 goal difference this ",
        "season. Bayern Munich, on the other hand, have consistently ",
        "outperformed\nBVB when winning and drawing, and on average have BVB ",
        "beat when losing too, but they have been on a pretty steady decline ",
        "when winning, slipping from around +3 goals to a little less than +2."
      ),
  )

ggsave(here::here("figs", "buli_game_state.png"),
       dpi = 320, width = 20, height = 10)

```

```{r}
#| label: shot-comp-plot

comp_plot(stat=shot_diff, label = "Shot") +
  labs(
    subtitle = glue::glue(

      ),
  )

ggsave(here::here("figs", "buli_game_state.png"),
       dpi = 320, width = 20, height = 10)

```

## Winning Positions

### Dropped Points

```{r}

buli_deficits |> 
  ## filter(season == 2022) |>
  filter(season == 2022 & games == "All Games") |>
  mutate(
    team_colours = case_when(team == "Bayern Munich" ~ "#DB4254",
                             team == "Borussia Dortmund" ~ "#ffa600",
                             .default = "#dee2e6")
    ) |> 
  ggplot(aes(points, reorder(team, points), fill = team_colours)) +
  geom_col(colour="grey20") +
  ## add text (another option would be stat_summary())
  geom_text(
    aes(label = points),
    ## adjust posiiton inside
    hjust = 1, nudge_x = -.25,
    ## label formatting
    size = 6, fontface = "bold",
    colour = "grey10"
  ) +
  geom_vline(xintercept = 0, linewidth = 1, colour = "grey10") +
  ## reduce spacing between labels and bars
  scale_x_continuous(expand = c(.01, .01)) +
  ## add custom colors
  scale_fill_identity() +
  labs(
      title = "Total Points Gained from Losing Positions by Bundesliga Teams, 2014/15 - 2022/23",
      # subtitle = glue::glue(
      #   "Borussia Dortmund have actually dropped relatively few points from ",
      #   "winning positions so far this season (as of Matchday 30). Despite ",
      #   "their well established reputation for humiliating\ncollapses and a ",
      #   "general capacity for some high-class stupidity at the most ",
      #   "inopportune moments, BVB are doing a solid job of holding on to a ",
      #   "lead. Bayern Munich, on the other hand, \nhave been ",
      #   "uncharacteristically vulnerable, droppping a total of 16 points so ",
      #   "far this season, placing them third in the Bundesliga bottlers table."
      # ),
      caption = glue::glue(
        "Source: Transfermarkt | Graphic: Paul Johnson (@paul_johnson89)"),
      x = NULL, y=NULL
      ) +
  theme(
    panel.grid.major.y = element_blank(),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_line(linewidth = 0.6, color = "grey80",
                                      linetype = "dotted"),
    panel.grid.minor.x = element_blank()
    )

ggsave(here::here("figs", "dropped_points.png"),
       dpi = 320, width = 18, height = 12)

```



```{r}

points_plot <- function(games) {
  buli_deficits |>
    # group_by(team) |>
    # filter(n() == 9) |>
    #summarise(dropped_points = sum(dropped_points)) |>
    filter(season == 2022 & games == {{ games }} & !is.na(points_per_deficit)) |>
    mutate(
      team_colours = case_when(team == "Bayern Munich" ~ "#DB4254",
                               team == "Borussia Dortmund" ~ "#ffa600",
                               .default = "#dee2e6"
      ),
      team_text = case_when(points_per_deficit < 0.15 ~ 0.5,
                            TRUE ~ as.numeric(points_per_deficit) - .05)
    ) |>
    ggplot(aes(points_per_deficit, reorder(team, points_per_deficit), fill = team_colours)) +
    geom_col(colour = "grey20") +
    ## add text (another option would be stat_summary())
    geom_text(
      aes(label = points_per_deficit, x = team_text),
      ## adjust posiiton inside
      hjust = 1,
      ## label formatting
      size = 4, fontface = "bold",
      colour = "grey10"
    ) +
    geom_vline(xintercept = 0, linewidth = 1, colour = "grey10") +
    labs(title = glue::glue("{ games }"), x = NULL, y = NULL) +
    ## reduce spacing between labels and bars
    scale_x_continuous(expand = c(.025, .025)) +
    #scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 12)) +
    ## add custom colors
    scale_fill_identity() +
    theme(
      plot.title = ggtext::element_markdown(size = rel(1), 
                                            hjust = .5,
                                            margin = margin(t = 10, b = 5)),
      plot.title.position = "panel",
      axis.text.y = element_text(size = rel(0.8),
                                 vjust = .5,
                                 margin = margin(l = 5, r = -5)),
      axis.text.x = element_text(size = rel(0.8)),
      panel.grid.major.y = element_blank(),
      panel.grid.minor.y = element_blank(),
      panel.grid.major.x = element_line(
        linewidth = 0.6, color = "grey80",
        linetype = "dotted"
      ),
      panel.grid.minor.x = element_blank(),
      plot.margin = margin(l = 10, 0, 0, 0)
    )
}



```

```{r}

p1 <- points_plot(games="All Games")
p2 <- points_plot(games="Home Games")
p3 <- points_plot(games="Away Games")

(p1 | p2 | p3) + 
  plot_annotation(
    title = "Points Gained from Losing Positions by Bundesliga Teams in the 2022/23 Season",
    # subtitle = glue::glue(
    #   "<b style='color:#ffa600;'>Borussia Dortmund</b> have actually dropped ",
    #   "relatively few points from winning positions over all games so far ",
    #   "this season. However, when we split the dropped points by home and ",
    #   "away games, it's clear that<br>the total games disguises some of the ",
    #   "variance going on. BVB drop very few points at home, but have dropped ",
    #   "the sixth highest points in the league when not playing at the ",
    #   "Westfalenstadion. Of course, all<br>this is overshadowed by ",
    #   "<b style='color:#DB4254;'>Bayern Munich</b>'s uncharacteristically ",
    #   "poor grip on games they are winning. Bayern have dropped more points ",
    #   "than BVB, both home and away. That's not very _Mia San Mia_ at all!"
    #   ),
    caption = "Source: Transfermarkt | Graphic: Paul Johnson (@paul_johnson89)",
    theme = theme(plot.subtitle = ggtext::element_markdown())
    )

ggsave(here::here("figs", "dropped_points_by_games.png"),
       dpi = 320, width = 20, height = 10)
```

```{r}

results_plot <-
  function(team) {
    buli_leads |>
      filter(games == "All Games" & team == {{ team }}) |>
      tidyr::pivot_longer(
        cols = c(wins, draws, losses),
        names_to = "outcome",
        values_to = "total"
      ) |>
      mutate(outcome = factor(outcome, levels = c("wins", "draws", "losses"))) |>
      ggplot(aes(reorder(season, rev(season)), total, fill = outcome)) +
      geom_col(position = "fill", colour = "grey20") +
      scale_fill_manual(
        values = if (team == "Borussia Dortmund"){
          c('#ffa600', '#fec43d', '#ffdf68')
          } else {
            c('#db4254', '#e86d73', '#f29394')
            },
        labels = function(x) stringr::str_to_title(x)
      ) +
      scale_x_discrete(labels = rev(c(
        "2014/15", "2015/16", "2016/17", "2017/18",
        "2018/19", "2019/20", "2020/21", "2021/22",
        "2022/23"
      ))) +
      geom_hline(yintercept = 0, linewidth = 1, colour = "grey10") +
      coord_flip() +
      labs(x = NULL, y = "Results as a Proportion of Leads") +
      theme(
        axis.text.y = element_text(vjust = .5, margin = margin(l = 5, r = -5)),
        panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        panel.grid.major.x = element_line(
          linewidth = 0.6, color = "grey80",
          linetype = "dotted"
        ),
        panel.grid.minor.x = element_blank(),
        plot.margin = margin(l = 10, 0, 0, 0)
      )
  }

```

```{r}

p1 <- results_plot("Borussia Dortmund")
p2 <- results_plot("Bayern Munich")

(p1 | p2) + 
  plot_annotation(
    title = glue::glue(
      "<b style='color:#DB4254;'>Bayern Munich</b> & ",
      "<b style='color:#ffa600;'>Borussia Dortmund</b>'s Bundesliga Results ",
      "from Winning Positions, 2014/15 - 2022/23"),
    subtitle = glue::glue(
      "BVB embraced their draws era in 2017/18 but on the whole they are ",
      "pretty consistent over this period. This season they are seeing out ",
      "the win a little better than in previous seasons, in particular they\n",
      "are losing fewer games from winning positions than in the last three ",
      "seasons. Meanwhile, Bayern have become less reliable in the last ",
      "couple seasons, and are having a particularly bad time this season.\n",
      "They have dropped points in ~25% of all Bundesliga games so far this ",
      "season, seemingly at risk of turning three points into one more often ",
      "than at any other season in this period."
    ),
    caption = glue::glue("Source: Transfermarkt | ",
                         "Graphic: Paul Johnson (@paul_johnson89)")
    )
```


```{r}

buli_deficits |>
  filter(games == "All Games" & team == "Bayern Munich") |> 
  tidyr::pivot_longer(cols = c(wins, draws, losses),
                      names_to = "outcome",
                      values_to = "total") |> 
  mutate(outcome = factor(outcome, levels = c("wins", "draws", "losses"))) |>
  ggplot(aes(reorder(season, rev(season)), total, fill = outcome)) +
  geom_col(position="fill", colour = "grey20") +
  # facet_grid(rows = vars(season), cols = vars(outcome), scales = "free_x") +
  scale_fill_manual(# values = c('#ffa600', '#fec43d', '#ffdf68'),
                    values = c('#db4254', '#e86d73', '#f29394'),
                    labels = function(x) stringr::str_to_title(x)) +
  scale_x_discrete(labels = rev(c("2014/15", "2015/16", "2016/17", "2017/18",
                                  "2018/19", "2019/20", "2020/21", "2021/22",
                                  "2022/23"))) +
  geom_hline(yintercept = 0, linewidth = 1, colour = "grey10") +
  labs(
    title = "Outcomes as a Proportion of Deficits in Bundesliga Games, 2014/15 - 2022/23",
    # subtitle = glue::glue(
    #   "BVB win the vast majority of games where they take the lead, but the ",
    #   "details here are illustrative. This season, BVB are currently lagging ",
    #   "a little behind the previous four seasons in total games with a lead\n",
    #   "(however they will catch up if they take the lead in each of their ",
    #   "remaining games), while they have ultimately drawn a very similar ",
    #   "number of games and lost slightly fewer. In the last three seasons, BVB\n",
    #   "have been remarkably consistent."
    # ),
    x = NULL, y = "Games With a Deficit",
    caption = "Source: Transfermarkt | Graphic: Paul Johnson (@paul_johnson89)",
  ) +
  coord_flip() +
  theme(
        panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        panel.grid.major.x = element_line(linewidth = 0.6, color = "grey80",
                                          linetype = "dotted"),
        panel.grid.minor.x = element_blank()
        )

ggsave(here::here("figs", "stacked_leads.png"),
       dpi = 320, width = 20, height = 10)
```

```{r}

buli_leads |>
  filter(games == "All Games" & team == "Bayern Munich") |> 
  tidyr::pivot_longer(cols = c(wins, draws, losses),
                      names_to = "outcome",
                      values_to = "total") |> 
  mutate(outcome = factor(outcome, levels = c("wins", "draws", "losses"))) |>
  ggplot(aes(reorder(season, rev(season)), total, fill = outcome)) +
  geom_col(position="fill", colour = "grey20") +
  # facet_grid(rows = vars(season), cols = vars(outcome), scales = "free_x") +
  scale_fill_manual(values=c('#db4254', '#e86d73', '#f29394'),
                    labels = function(x) stringr::str_to_title(x)) +
  scale_x_discrete(labels = rev(c("2014/15", "2015/16", "2016/17", "2017/18",
                                  "2018/19", "2019/20", "2020/21", "2021/22",
                                  "2022/23"))) +
  geom_hline(yintercept = 0, linewidth = 1, colour = "grey10") +
  labs(
    title = "Outcomes as a Proportion of Bayern Munich Leads in Bundesliga Games, 2014/15 - 2022/23",
    # subtitle = glue::glue(
    #   "BVB win the vast majority of games where they take the lead, but the ",
    #   "details here are illustrative. This season, BVB are currently lagging ",
    #   "a little behind the previous four seasons in total games with a lead\n",
    #   "(however they will catch up if they take the lead in each of their ",
    #   "remaining games), while they have ultimately drawn a very similar ",
    #   "number of games and lost slightly fewer. In the last three seasons, BVB\n",
    #   "have been remarkably consistent."
    # ),
    x = NULL, y = "Games With a Lead",
    caption = "Source: Transfermarkt | Graphic: Paul Johnson (@paul_johnson89)",
  ) +
  coord_flip() +
  theme(
        panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        panel.grid.major.x = element_line(linewidth = 0.6, color = "grey80",
                                          linetype = "dotted"),
        panel.grid.minor.x = element_blank()
        )

```

### Drop Rate

```{r}

buli_leads |> 
  filter(team == "Borussia Dortmund") |>
  ggplot(aes(season, dropped_points_rate, colour=games)) +
  geom_smooth(method = lm, formula = y ~ splines::bs(x), se = FALSE,
              linewidth = 1.2, alpha = .5) +
  geom_point(aes(fill=games), shape = 21, size = 6, alpha = .7, stroke = 1,
             colour = "grey20") +
  # facet_wrap(vars(stat), scales = "free_y") +
  scale_fill_manual(values=c('#dee2e6', '#ffa600', '#343a40')) +
  scale_colour_manual(values=c('#dee2e6', '#ffa600', '#343a40'))  +
  scale_x_continuous(breaks = c(2014:2022), labels = c(
    "2014/15", "2015/16", "2016/17", "2017/18", "2018/19",
    "2019/20", "2020/21", "2021/22", "2022/23")) +
  labs(
    title = "Borussia Dortmund's Rate of Dropped Points in the Bundesliga, 2014/15 - 2022/23",
    # subtitle = glue::glue(
    #   "While BVB's xGDiff/90 (xG for â€“ XG against) when drawing and losing has ",
    #   "remained relatively constant from 2014/15 to 2022/23, their xGDiff when ",
    #   "winning has declined,\neven dropping below the xGDiff when drawing in ",
    #   "four of the last five seasons. Although BVB's xGDiff rarely drops below ",
    #   "0 in any game state, their mean average xGDiff\nacross all game states ",
    #   "dropped from ~1 before the 2018/19 season to ~0.5 after, and that is ",
    #   "driven by the decline when BVB are winning (from 1.65 to ~0.45)."),
  caption = "Source: Transfermarkt | Graphic: Paul Johnson (@paul_johnson89)",
  x = NULL, y = "Dropped Points Rate"
  ) +
  theme(panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.y = element_line(linewidth = 0.6, color = "grey80",
                                          linetype = "dotted"),
        panel.grid.minor.y = element_blank(),
        axis.text.x = element_text(angle = 30, vjust = 0.5, hjust=0.5),
        axis.text.y = element_text(size = rel(1.2)),
        panel.spacing.x = unit(3, "lines"),
        strip.text = element_text(size = rel(1.2), margin = margin(t=10, b=20))
        )

```

## Percentage Comparison

```{r}

buli_deficits |>
  filter(games=="All Games") |> 
  tidyr::pivot_longer(
    cols = c(comeback_percent, win_percent),
    names_to = "stat",
    values_to = "percent"
  ) |> 
  mutate(
    team_colours = case_when(
      team == "Bayern Munich" ~ "#DB4254",
      team == "Borussia Dortmund" ~ "#ffa600",
      .default = "#dee2e6"
    ),
    team_alpha = case_when(
      team %in% c("Bayern Munich", "Borussia Dortmund") ~ .8,
      .default = .2
    ),
    team_size = case_when(
      team %in% c("Bayern Munich", "Borussia Dortmund") ~ 6,
      .default = 4
    )
  ) |>
  ggplot(aes(season, percent)) +
  geom_smooth(aes(colour = team_colours, alpha = team_alpha),
    method = lm, formula = y ~ splines::bs(x),
    se = FALSE, linewidth = 1.2
  ) +
  geom_point(aes(fill = team_colours, alpha = team_alpha, size = team_size),
    shape = 21, stroke = 1
  ) +
  facet_wrap(vars(stat)) +
  scale_colour_identity() +
  scale_fill_identity() +
  scale_alpha_identity() +
  scale_size_identity() +
  scale_x_continuous(
    breaks = c(2014:2022),
    labels = c(
      "2014/15", "2015/16", "2016/17", "2017/18", "2018/19",
      "2019/20", "2020/21", "2021/22", "2022/23"
    )
  ) +
  labs(
    title = glue::glue(
      "<b style='color:#DB4254;'>Bayern Munich</b> & ",
      "<b style='color:#ffa600;'>Borussia Dortmund</b>'s Win Rate ",
      "From Losing Positions in the Bundesliga, 2014/15 - 2022/23"
    ),
    caption = glue::glue(
      "Source: Transfermarkt | ",
      "Graphic: Paul Johnson (@paul_johnson89)"
    ),
    x = NULL, y = glue::glue("Win Rate")
  ) +
  theme(
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    panel.grid.major.y = element_line(
      linewidth = 0.6, color = "grey80",
      linetype = "dotted"
    ),
    panel.grid.minor.y = element_blank(),
    axis.text.x = element_text(angle = 30, vjust = 0.5, hjust = 0.5),
    panel.spacing.x = unit(3, "lines"),
    strip.text = element_text(size = rel(1))
  )

```

## Time

```{r}

goal_times <- 
  readr::read_csv(here::here("data", "buli_team_stats.csv")) |> 
  filter(stat_group_name == "timing") |> 
      select(!time) |> 
      rename(
        team = team_name,
        timing = stat_name,
        season = season_start_year,
        shots_against = against.shots,
        goals_against = against.goals,
        xG_against = against.xG
      ) |>
      group_by(team, season, timing) |>
      mutate(
        goal_diff = goals - goals_against,
        xG_diff = xG - xG_against,
        shot_diff = shots - shots_against
      )

goal_times |> 
  filter(season == 2022) |> 
  mutate(
    team = case_when(
      team == "Bayern Munich" ~ "Bayern Munich",
      team == "Borussia Dortmund" ~ "Borussia Dortmund",
      .default = "Bundesliga Average"
      ),
    team = factor(team, levels = c("Bayern Munich",
                                   "Borussia Dortmund",
                                   "Bundesliga Average"))
    ) |> 
  group_by(team, timing) |> 
  summarise(across(goal_diff:shot_diff, ~ mean(.x))) |> 
  tidyr::pivot_longer(
    cols = ends_with("diff"),
    names_to = "stat"
  ) |> 
  mutate(
    stat = recode(stat, 
                  goal_diff = "Goals",
                  xG_diff = "xG",
                  shot_diff = "Shots"),
    stat = factor(stat, levels = c("Shots", "Goals", "xG"))
    ) |>
  ggplot(aes(timing, value, fill = team)) +
  geom_col(position="dodge", alpha = 0.8, colour = "grey20") +
  geom_hline(yintercept = 0, colour = "grey20", linewidth = 1) +
  facet_wrap(vars(stat), scales = "free_y") +
  scale_fill_manual(values = c("#DB4254", "#ffa600", "#dee2e6")) +
  labs(
    title = glue::glue(
      "Bundesliga Performances (Shots, Goals, and xG ",
      "Difference) by Game Timings 2014/15 - 2022/2023"
    ),
    x = NULL, y = "Difference") +
  theme_ftw() +
  theme(axis.text.x = element_text(angle = 30, vjust = 0.5, hjust = 0.5))

```

```{r}

goal_times |> 
  mutate(
    team = case_when(
      team == "Bayern Munich" ~ "Bayern Munich",
      team == "Borussia Dortmund" ~ "Borussia Dortmund",
      .default = "Bundesliga Average"
      ),
    team = factor(team, levels = c("Bayern Munich",
                                   "Borussia Dortmund",
                                   "Bundesliga Average"))
    ) |> 
  group_by(season, team, timing) |> 
  summarise(across(goal_diff:shot_diff, ~ mean(.x))) |> 
  tidyr::pivot_longer(
    cols = ends_with("diff"),
    names_to = "stat"
  ) |> 
  mutate(
    stat = recode(stat, 
                  goal_diff = "Goals",
                  xG_diff = "xG",
                  shot_diff = "Shots"),
    stat = factor(stat, levels = c("Shots", "Goals", "xG")),
    team_colours = case_when(
      team == "Bayern Munich" ~ "#DB4254",
      team == "Borussia Dortmund" ~ "#ffa600",
      .default = "#dee2e6"
      ),
    team_alpha = case_when(
      team %in% c("Bayern Munich", "Borussia Dortmund") ~ .8,
      .default = .2
      ),
    team_size = case_when(
      team %in% c("Bayern Munich", "Borussia Dortmund") ~ 6,
      .default = 4
      )
    ) |> 
  filter(stat == "Goals") |> 
  ggplot(aes(season, value, fill = team_colours)) +
  geom_hline(yintercept = 0, colour = "grey20", linetype = "dashed", linewidth = 1) +
  geom_smooth(aes(colour = team_colours, alpha = team_alpha),
    method = lm, formula = y ~ splines::bs(x),
    se = FALSE, linewidth = 1.2
  ) +
  geom_point(aes(fill = team_colours, alpha = team_alpha, size = team_size),
    shape = 21, stroke = 1
  ) +
  facet_wrap(vars(timing), scales = "free_y") +
  scale_colour_identity() +
  scale_fill_identity() +
  scale_alpha_identity() +
  scale_size_identity() +
  scale_x_continuous(
    breaks = c(2014:2022),
    labels = c(
      "2014/15", "2015/16", "2016/17", "2017/18", "2018/19",
      "2019/20", "2020/21", "2021/22", "2022/23"
    )
  ) +
  labs(
    title = glue::glue(
      "Bundesliga Performances (Shots, Goals, and xG ",
      "Difference) by Game Timings in the 2022/2023 Season"
    ),
    x = NULL, y = "Difference") +
  theme_ftw() +
  theme(axis.text.x = element_text(angle = 30, vjust = 0.5, hjust = 0.5))

```

```{r}

goal_times |> 
      mutate(
        team_colours = case_when(
          team == "Bayern Munich" ~ "#DB4254",
          team == "Borussia Dortmund" ~ "#ffa600",
          .default = "#dee2e6"
        ),
        team_alpha = case_when(
          team %in% c("Bayern Munich", "Borussia Dortmund") ~ .8,
          .default = .2
        ),
        team_size = case_when(
          team %in% c("Bayern Munich", "Borussia Dortmund") ~ 6,
          .default = 4
        )
      ) |>
      ggplot(aes(season, xG_diff)) +
      geom_hline(yintercept = 0, colour = "grey20",
                 linetype = "dashed", linewidth = 1) +
      geom_smooth(aes(colour = team_colours, alpha = team_alpha),
                  method = lm, formula = y ~ splines::bs(x),
                  se = FALSE, linewidth = 1.2
      ) +
      geom_point(aes(fill = team_colours, alpha = team_alpha, size = team_size),
                 shape = 21, stroke = 1
      ) +
      facet_wrap(vars(timing), scales = "free_y") +
      scale_colour_identity() +
      scale_fill_identity() +
      scale_alpha_identity() +
      scale_size_identity() +
      scale_x_continuous(
        breaks = c(2014:2022),
        labels = c(
          "2014/15", "2015/16", "2016/17", "2017/18", "2018/19",
          "2019/20", "2020/21", "2021/22", "2022/23"
        )
      ) +
      labs(
        title = glue(
          "Bundesliga Performance (Measured Using xG ",
          "Difference) by Game Timings, 2014/15 - 2022/23"
        ),
        caption = glue(
          "Source: Understat (via worldfootballR) | ",
          "Graphic: Paul Johnson (@paul_johnson89)"
        ),
        x = NULL, y = glue("xG Difference /90")
      ) +
      theme_ftw() +
      theme(axis.text.x = element_text(angle = 30, vjust = 0.5, hjust = 0.5))

```